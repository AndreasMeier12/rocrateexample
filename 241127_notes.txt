Referring to specific enttities within a dataset in a ro crate context. 
Hasn't come up a lot, would it be possible to split the file. 


Referring to multiple tables in one file

Where should we put the metadata in the ro crate manifest?

Consider extracting from space downward into a JSON-LD, this is traditional. Use cross-references for the JSON-LD.

Where do we attach the json? We would like to read it back. 
There is a RO crate library in python, `rocratepy`, it is very general. There is also a Java version. For testing purposes,  we can continue using the python library. 



Existing work on ELN with RO Crate. 
Juan: Serializing schema is not yet done by ELN consortium. It could also be more general than ELNs, more use cases supported. It should be more general than an extension for just one particular domain. 
The project stems from the existing implementations of ELNs. A lot of different schemas, this would be hard to integrate. 

---

Suggestion time!
Juan: Where do we put the metadata? In which part of the manifest?
Eli: Have the rows be individual entities in the graph. It's possible to add them as their own terms. Ideally, you should be mapping them to terms on schema.org
Juan: Can we put schema and metadata on the context?
Eli: Only the terms of the schema, the schema should be included as a file or online. 
Juan: Where do we put the terms? 
Eli: If I say context, I mean `@context`. 
Juan: Where does the schema go?
Eli: schema.json, there is no mechanism to describe a full schema in the ro crate metadata. 
Juan: Is it reasonable to put a schema definition in the context? we need to serialize separately and include it in the context .
Eli: Beyond my knowledge whether json ld can contain a whole schema. 
Juan: We put the metadata in the context and the schema separately. 
Eli: The closest thing we have are the RO Crate profiles, they can tell how to structure the metadata.
Juan: Say we create a profile dynamically, can we include the schema?
Eli: I think so, not sure what it means to create a schema dynamically. Profiles are a set of specifications. You would have to include the whole profile in the RO Crate. 
Juan: We are currently experimenting and not yet proposing something concrete. 

Juan: in json ld, everything is an object, right? Can we say that an object is a sample and define the sample fields. We cannot, right? we can include fields but cannot validate against them because we don't have a schema. 
Eli: Yes, the expectation of using RO Crate is structuring it according to existing vocabulary or profile. These have to be written manually. If you want to do something more general, [missing]. It just hasn't been done before. 
Juan: Currently, you only use json ld for serialization. does anyone in the community opinion on this? json-ld is easy to read but not easy to stream. I worry we hit some limitations. Maybe the way would be to have more than one serialization format but it would also fragment the ecosystem. 
Eli: RO Crate is tied to JSON LD at the moment. I don't know how popular it would be to support additional formats because of tooling. I'm not sure it's worth doing unless there is a problem that json ld cannot do. 

We can share it, when the metadata matches. At the moment, it's work in progress. 

Eli will keep thinking about it. It's possible to extend RO spec, we are not entirely constrained by its current state. 



Summary
In the context of interoperability between electronic lab notebooks (ELNs), we would like to include a schema describing metadata.
This is important because.
openBIS has an existing export in one 

This does not seem to be a good fit for a profile as profiles are . 

No conclusion has been reached. 


A dyamic way to express schemas of metadata and bundle it inside the ro crate.

Profiles don't seem like a good match.